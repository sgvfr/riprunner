; This file contains the externalized sql statements for rip runner common to all database engines (based on Mysql)

database_exists_check = "SELECT count(SCHEMA_NAME) as count FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = :dbname"

database_table_exists_check = "SELECT count(*) as count FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = :dbname AND table_name = :dbtable"

database_create = "CREATE DATABASE :db"

admin_user_create = "INSERT INTO user_accounts (firehall_id,user_id,user_pwd,access)
                     VALUES(:fhid,'admin',:pwd,1)"

login_user_check = "SELECT id, firehall_id, user_id, user_pwd, access, user_type
                    FROM user_accounts
                    WHERE user_id = :id AND firehall_id = :fhid
                    LIMIT 1"

ldap_login_user_check = "SELECT id, firehall_id, user_id, access, user_type
                    FROM ldap_user_accounts
                    WHERE user_id = :id AND firehall_id = :fhid
                    LIMIT 1"
                    
login_user_password_check = "SELECT user_pwd
                             FROM user_accounts
                             WHERE id = :id AND firehall_id = :fhid
                             LIMIT 1"
                                                 
login_brute_force_check = "SELECT time FROM login_attempts
                           WHERE useracctid = :id AND time > NOW() - INTERVAL 2 HOUR"
                           
login_brute_force_insert = "INSERT INTO login_attempts(useracctid, time)
                            VALUES (:uid, CURRENT_TIMESTAMP())"
                            
users_mobile_access_list = "SELECT distinct(mobile_phone) 
                            FROM user_accounts 
                            WHERE mobile_phone <> '' AND access & :sms_access"
                                                        
check_live_callouts = "SELECT * FROM callouts 
                       WHERE status NOT IN (3,10) AND TIMESTAMPDIFF(HOUR,calltime,CURRENT_TIMESTAMP()) <= :max_age
                       ORDER BY id DESC LIMIT 1"

check_live_callouts_max = "SELECT * FROM callouts 
                           WHERE status NOT IN (3,10) AND TIMESTAMPDIFF(HOUR,calltime,CURRENT_TIMESTAMP()) <= :max_age
                           ORDER BY id DESC LIMIT 5"
                       
check_trigger_history_by_type = "SELECT hash_data
                           FROM trigger_history
                           WHERE type = :type AND firehall_id = :fhid"

trigger_history_insert = "INSERT INTO trigger_history (triggertime, type, firehall_id, hash_data) 
                            SELECT CURRENT_TIMESTAMP(), :type, :fhid, :hash_data FROM dual
                            WHERE NOT EXISTS (SELECT * FROM trigger_history WHERE type=:type AND firehall_id=:fhid AND hash_data=:hash_data) 
                            LIMIT 1"
                            
check_existing_callout = "SELECT id,call_key,status
                            FROM callouts WHERE calltime = :ctime AND calltype = :ctype AND
                            (address = :caddress OR (latitude = :lat AND longitude = :long))"
                            
callout_update = "UPDATE callouts
                  SET address = :caddress, latitude = :lat, longitude = :long, units = :units
                  WHERE id = :id AND (address <> :caddress OR latitude <> :lat OR longitude <> :long OR units <> :units)"                            
              
callout_status_update = "UPDATE callouts SET status = :status WHERE id = :id AND status NOT in(3,10)"

callout_insert = "INSERT INTO callouts (calltime,calltype,address,latitude,longitude,units,call_key)
                  values(:cdatetime, :ctype, :caddress, :lat, :long, :units, :ckid)"                            
                  
ldap_user_accounts_insert = "INSERT IGNORE INTO ldap_user_accounts (id,firehall_id,user_id,mobile_phone,access,user_type)
                             values(:uid,:fhid,:user_id,:mobile_phone,:access,:user_type)"

ldap_user_accounts_create = "CREATE TEMPORARY TABLE IF NOT EXISTS ldap_user_accounts (
            id INT( 11 ) NOT NULL AUTO_INCREMENT PRIMARY KEY,
            firehall_id varchar(80) COLLATE utf8_unicode_ci NOT NULL,
            user_id varchar(255) COLLATE utf8_unicode_ci NOT NULL,
            user_pwd varchar(255) COLLATE utf8_unicode_ci NOT NULL,
            mobile_phone varchar(25) COLLATE utf8_unicode_ci NOT NULL,
            access INT( 11 ) NOT NULL DEFAULT 0,
            user_type int(11),
            updatetime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP
            ) ENGINE = INNODB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;"
            
ldap_user_accounts_count = "SELECT count(*) as usercount from ldap_user_accounts"

ldap_user_accounts_select_by_mobile = "SELECT id,user_id 
                                       FROM ldap_user_accounts 
                                       WHERE firehall_id = :fhid AND mobile_phone = :mobile_phone"

user_accounts_select_by_mobile = "SELECT id,user_id 
                                  FROM user_accounts 
                                  WHERE firehall_id = :fhid AND mobile_phone = :mobile_phone"

devicereg_select_by_fhid = "SELECT registration_id FROM devicereg WHERE firehall_id = :fhid";

devicereg_delete_by_regid = "DELETE FROM devicereg WHERE registration_id = :reg_id"

user_accounts_update = "UPDATE user_accounts
                        SET firehall_id = :fhid , user_id = :user_name,
                         user_type = :user_type
                         :sql_pwd, 
                         mobile_phone = :mobile_phone
                         :sql_user_access
                        , updatetime = CURRENT_TIMESTAMP()
                        WHERE id = :user_id"
                        
user_accounts_insert = "INSERT INTO user_accounts
                         (firehall_id, user_id, mobile_phone, user_pwd, access, user_type)
                         VALUES(:fhid, :user_name, :mobile_phone, :user_pwd, :access, :user_type)"

user_accounts_delete = "DELETE FROM user_accounts WHERE id = :id"

check_callouts_by_id_and_keyid = "SELECT * FROM callouts 
                                   :sql_cid
                                   :sql_ckid"
                                    
ldap_check_callouts_responding = "SELECT a.*, b.user_id 
                                     FROM callouts_response a 
                                     LEFT JOIN ldap_user_accounts b ON a.useracctid = b.id 
                                     WHERE calloutid = :cid ORDER BY (a.status = 4)"
                                    
check_callouts_responding = "SELECT a.*, b.user_id 
                             FROM callouts_response a 
                             LEFT JOIN user_accounts b ON a.useracctid = b.id 
                             WHERE calloutid = :cid ORDER BY (a.status = 4)"

ldap_check_callouts_not_responding = "SELECT id, user_id FROM ldap_user_accounts
                                       WHERE firehall_id = :fhid AND access & :respond_access AND id NOT IN (SELECT useracctid
                                       FROM callouts_response WHERE calloutid = :cid) order by user_id ASC"
                                       
check_callouts_not_responding = "SELECT id, user_id FROM user_accounts
                                   WHERE firehall_id = :fhid AND access & :respond_access AND id NOT IN (SELECT useracctid
                                   FROM callouts_response WHERE calloutid = :cid) order by user_id ASC"

ldap_check_callouts_yes_responding = "SELECT id,user_id FROM ldap_user_accounts
                                      WHERE id IN (SELECT useracctid
                                      FROM callouts_response WHERE calloutid = :cid)"
                                      
check_callouts_yes_responding = "SELECT id,user_id FROM user_accounts
                                  WHERE id IN (SELECT useracctid
                                  FROM callouts_response WHERE calloutid = :cid)"
                                      
callout_history_select = "SELECT a.*, (select count(*) AS responders FROM callouts_response b 
                                        WHERE a.id = b.calloutid AND b.status <> 4) AS responders,
                                       (time_to_sec(timediff(max(c.updatetime), LEAST(a.calltime,a.updatetime) )) / 3600) as hours_spent
                             FROM callouts a LEFT JOIN callouts_response c ON a.id = c.calloutid
                             GROUP BY a.id ORDER BY a.calltime DESC"
                             
ldap_callout_history_response_select = "SELECT b.user_id,a.responsetime,a.latitude,a.longitude,
                                         a.status,a.updatetime,c.address
                                         FROM callouts_response a
                                         LEFT JOIN ldap_user_accounts b on a.useracctid = b.id
                                         LEFT JOIN callouts c on a.calloutid = c.id
                                         WHERE calloutid = :cid"
                                           
callout_history_response_select = "SELECT b.user_id,a.responsetime,a.latitude,a.longitude,
                                     a.status,a.updatetime,c.address
                                     FROM callouts_response a
                                     LEFT JOIN user_accounts b on a.useracctid = b.id
                                     LEFT JOIN callouts c on a.calloutid = c.id
                                     WHERE calloutid = :cid"
                                           
ldap_callout_authenticate_by_fhid_and_userid = "SELECT id,user_pwd FROM ldap_user_accounts
                                                WHERE firehall_id = :fhid AND user_id = :uid"
                                           
callout_authenticate_by_fhid_and_userid = "SELECT id,user_pwd FROM user_accounts
                                           WHERE firehall_id = :fhid AND user_id = :uid"
                                           
callout_authenticate_by_id_and_key = "SELECT * FROM callouts WHERE id = :cid AND call_key = :ckid"

callout_total_count_by_id_and_user_and_status = "SELECT COUNT(*) total_count FROM callouts_response 
                                                 WHERE calloutid = :cid AND useracctid = :uid AND status = :status"

callout_response_status_update = "UPDATE callouts_response SET status = :status, eta = :eta, updatetime = CURRENT_TIMESTAMP()
                                  WHERE calloutid = :cid AND useracctid = :uid"
                                                                     
callout_response_status_and_geo_update = "UPDATE callouts_response SET status = :status, eta = :eta, updatetime = CURRENT_TIMESTAMP(),
                                            latitude = :lat, longitude = :long
                                            WHERE calloutid = :cid AND useracctid = :uid"
                                            
callout_response_insert = "INSERT INTO callouts_response (calloutid,useracctid,responsetime,status,eta)
                           values(:cid, :uid, CURRENT_TIMESTAMP(), :status, :eta)"
                           
callout_response_geo_insert = "INSERT INTO callouts_response (calloutid,useracctid,responsetime,status,eta,latitude,longitude)
                               values(:cid, :uid, CURRENT_TIMESTAMP(), :status, :eta, :lat, :long)"
                           
callout_status_and_timestamp_update = "UPDATE callouts SET status = :status, updatetime = CURRENT_TIMESTAMP()
                                        WHERE id = :cid AND status NOT IN (3,10)"                           
                                        
check_callout_status_and_location = "SELECT status, latitude, longitude, address
                                     FROM callouts WHERE id = :cid"

ldap_check_callout_tracking_responders = "SELECT a.useracctid, a.calloutid, a.latitude,a.longitude, b.user_id
                                         FROM callouts_geo_tracking a
                                         LEFT JOIN ldap_user_accounts b ON a.useracctid = b.id
                                         WHERE firehall_id = :fhid AND a.calloutid = :cid AND
                                               a.trackingtime = (SELECT MAX(a1.trackingtime) FROM callouts_geo_tracking a1 WHERE a.calloutid = a1.calloutid AND a.useracctid = a1.useracctid)
                                         ORDER BY a.useracctid,a.trackingtime DESC"
                                     
check_callout_tracking_responders = "SELECT a.useracctid, a.calloutid, a.latitude,a.longitude, b.user_id
                                     FROM callouts_geo_tracking a
                                     LEFT JOIN user_accounts b ON a.useracctid = b.id
                                     WHERE firehall_id = :fhid AND a.calloutid = :cid AND
                                           a.trackingtime = (SELECT MAX(a1.trackingtime) FROM callouts_geo_tracking a1 WHERE a.calloutid = a1.calloutid AND a.useracctid = a1.useracctid)
                                     ORDER BY a.useracctid,a.trackingtime DESC"
                                           
callout_status_select_by_id_and_key = "SELECT status FROM callouts WHERE id = :cid AND call_key =:ckid"

callout_tracking_insert = "INSERT INTO callouts_geo_tracking (calloutid,useracctid,latitude,longitude)
                           values(:cid, :uid, :lat, :long)"

devicereg_userid_for_regid_update = "UPDATE devicereg SET user_id = :uid, updatetime = CURRENT_TIMESTAMP()
                                     WHERE registration_id = :regid AND firehall_id = :fhid"
                                     
devicereg_insert = "INSERT INTO devicereg (registration_id,firehall_id,user_id)
                    values(:regid, :fhid, :uid)"

ldap_callout_responders = "SELECT a.*, b.user_id FROM callouts_response a
                           LEFT JOIN ldap_user_accounts b ON a.useracctid = b.id
                           WHERE calloutid = :cid AND b.user_id = :uid"
                           
callout_responders = "SELECT a.*, b.user_id FROM callouts_response a
                       LEFT JOIN user_accounts b ON a.useracctid = b.id
                       WHERE calloutid = :cid AND b.user_id = :uid"

ldap_user_list_select = "SELECT * FROM ldap_user_accounts
                         :criteria 
                         order by access DESC, user_id ASC"
                  
user_list_select = "SELECT * FROM user_accounts
                    :criteria 
                    order by access DESC, user_id ASC"

user_type_list_select = "SELECT * FROM user_types
                    order by name ASC"
                  
reports_calltype_by_daterange = "SELECT calltype, COUNT(*) count FROM callouts 
                                 WHERE calltime BETWEEN :start AND :end
                                 AND calltype NOT IN ('TRAINING','TESTONLY')
                                 GROUP BY calltype ORDER BY calltype"
                                 
reports_calltype_all = "SELECT calltype, COUNT(*) count FROM callouts
                        WHERE calltype NOT IN ('TRAINING','TESTONLY')
                        GROUP BY calltype ORDER BY count DESC"
                        
reports_callvolume_titles_by_daterange = "(SELECT ':max_monthly_label' as datalabel)
                                     UNION (SELECT calltype as datalabel
                                     FROM callouts WHERE calltime BETWEEN :start AND :end
                                     AND calltype NOT IN ('TRAINING','TESTONLY')
                                     GROUP BY datalabel) ORDER BY (datalabel=':max_monthly_label') DESC,datalabel"
                                         
reports_callvolume_by_daterange = "(SELECT MONTH(calltime) AS month, ':max_monthly_label' AS datalabel, count(*) AS count
                                     FROM callouts WHERE calltime BETWEEN :start AND :end
                                     AND calltype NOT IN ('TRAINING','TESTONLY')
                                     GROUP BY month ORDER BY month)
                                    UNION (SELECT MONTH(calltime) AS month, calltype AS datalabel, count(*) AS count
                                     FROM callouts WHERE calltime BETWEEN :start AND :end
                                     AND calltype NOT IN ('TRAINING','TESTONLY')
                                     GROUP BY datalabel, month ORDER BY month) ORDER BY month, (datalabel=':max_monthly_label') DESC,datalabel"                                         
                                    
ldap_reports_callresponse_volume_titles_by_daterange = "(SELECT ':max_monthly_label' as datalabel)
                                                   UNION (SELECT b.user_id AS datalabel
                                                          FROM callouts_response a
                                                          LEFT JOIN ldap_user_accounts b ON a.useracctid = b.id
                                                          LEFT JOIN callouts c ON a.calloutid = c.id
                                                          WHERE c.status IN (3,10) AND a.responsetime BETWEEN :start AND :end
                                                          AND a.status <> 4
                                                          AND calltype NOT IN ('TRAINING','TESTONLY')
                                                          GROUP BY datalabel) ORDER BY (datalabel=':max_monthly_label') DESC,datalabel"

reports_callresponse_volume_titles_by_daterange = "(SELECT ':max_monthly_label' as datalabel)
                                               UNION (SELECT b.user_id AS datalabel
                                                    FROM callouts_response a
                                                    LEFT JOIN user_accounts b ON a.useracctid = b.id
                                                    LEFT JOIN callouts c ON a.calloutid = c.id
                                                    WHERE c.status IN (3,10) AND a.responsetime BETWEEN :start AND :end
                                                    AND a.status <> 4
                                                    AND calltype NOT IN ('TRAINING','TESTONLY')
                                                    GROUP BY datalabel) ORDER BY (datalabel=':max_monthly_label') DESC,datalabel"                                                          

ldap_reports_callresponse_volume_by_daterange = "(SELECT MONTH(calltime) AS month, ':max_monthly_label' AS datalabel, count(*) AS count
                                                 FROM callouts WHERE status IN (3,10) AND calltime BETWEEN :start AND :end
                                                 AND calltype NOT IN ('TRAINING','TESTONLY')
                                                 GROUP BY month ORDER BY month)
                                                 UNION (SELECT MONTH(responsetime) AS month, b.user_id AS datalabel, count(distinct c.id) AS count
                                                 FROM callouts_response a
                                                 LEFT JOIN ldap_user_accounts b ON a.useracctid = b.id
                                                 LEFT JOIN callouts c ON a.calloutid = c.id
                                                 WHERE c.status IN (3,10) AND a.responsetime BETWEEN :start AND :end
                                                 AND a.status <> 4
                                                 AND calltype NOT IN ('TRAINING','TESTONLY')
                                                 GROUP BY month, datalabel ORDER BY month, datalabel) ORDER BY month, (datalabel=':max_monthly_label') DESC,datalabel"                                                    
                                                 
reports_callresponse_volume_by_daterange = "(SELECT MONTH(calltime) AS month, ':max_monthly_label' AS datalabel, count(*) AS count
                                             FROM callouts WHERE status IN (3,10) AND calltime BETWEEN :start AND :end
                                             AND calltype NOT IN ('TRAINING','TESTONLY')
                                             GROUP BY month ORDER BY month)
                                            UNION (SELECT MONTH(responsetime) AS month, b.user_id AS datalabel, count(distinct c.id) AS count
                                             FROM callouts_response a
                                             LEFT JOIN user_accounts b ON a.useracctid = b.id
                                             LEFT JOIN callouts c ON a.calloutid = c.id
                                             WHERE c.status IN (3,10) AND c.calltime BETWEEN :start AND :end
                                             AND a.status <> 4
                                             AND calltype NOT IN ('TRAINING','TESTONLY')
                                             GROUP BY month, datalabel ORDER BY month, datalabel) ORDER BY month, (datalabel=':max_monthly_label') DESC,datalabel"

ldap_reports_callresponse_hours_titles_by_daterange = "(SELECT ':max_monthly_label' as datalabel)
                                                         UNION (SELECT b.user_id AS datalabel
                                                                FROM callouts_response a
                                                                LEFT JOIN ldap_user_accounts b ON a.useracctid = b.id
                                                                LEFT JOIN callouts c ON a.calloutid = c.id
                                                                WHERE c.status IN (3,10) AND a.responsetime BETWEEN :start AND :end
                                                                AND a.status <> 4
                                                                AND calltype NOT IN ('TRAINING','TESTONLY')
                                                                GROUP BY datalabel) ORDER BY (datalabel=':max_monthly_label') DESC,datalabel"                                             
                                                                
reports_callresponse_hours_titles_by_daterange = "(SELECT ':max_monthly_label' as datalabel)
                                                   UNION (SELECT b.user_id AS datalabel
                                                          FROM callouts_response a
                                                          LEFT JOIN user_accounts b ON a.useracctid = b.id
                                                          LEFT JOIN callouts c ON a.calloutid = c.id
                                                          WHERE c.status IN (3,10) AND a.responsetime BETWEEN :start AND :end
                                                          AND a.status <> 4
                                                          AND calltype NOT IN ('TRAINING','TESTONLY')
                                                          GROUP BY datalabel) ORDER BY (datalabel=':max_monthly_label') DESC,datalabel"                                                                
                                                          
ldap_reports_callresponse_hours_by_daterange = "(SELECT MONTH(calltime) AS month, ':max_monthly_label' AS datalabel, (time_to_sec(timediff(updatetime, LEAST(calltime,updatetime) )) / 3600) as hours_spent, id as cid
                                                 FROM callouts WHERE status IN (3,10) AND calltime BETWEEN :start AND :end
                                                 AND calltype NOT IN ('TRAINING','TESTONLY')
                                                 GROUP BY id, month ORDER BY month, id)
                                                 UNION (SELECT MONTH(c.calltime) AS month, b.user_id AS datalabel, (time_to_sec(timediff(c.updatetime, LEAST(c.calltime,c.updatetime) )) / 3600) as hours_spent, c.id as cid
                                                 FROM callouts_response a
                                                 LEFT JOIN ldap_user_accounts b ON a.useracctid = b.id
                                                 LEFT JOIN callouts c ON a.calloutid = c.id
                                                 WHERE c.status IN (3,10) AND c.calltime BETWEEN :start AND :end
                                                 AND a.status <> 4
                                                 AND calltype NOT IN ('TRAINING','TESTONLY')
                                                 GROUP BY c.id, month, datalabel ORDER BY month, datalabel, cid) ORDER BY month, (datalabel=':max_monthly_label') DESC,datalabel, cid"
                                                                                                           
reports_callresponse_hours_by_daterange = "(SELECT MONTH(calltime) AS month, ':max_monthly_label' AS datalabel, (time_to_sec(timediff(updatetime, LEAST(calltime,updatetime) )) / 3600) as hours_spent, id as cid
                                             FROM callouts WHERE status IN (3,10) AND calltime BETWEEN :start AND :end
                                             AND calltype NOT IN ('TRAINING','TESTONLY')
                                             GROUP BY id, month ORDER BY month, id)
                                            UNION (SELECT MONTH(c.calltime) AS month, b.user_id AS datalabel, (time_to_sec(timediff(c.updatetime, LEAST(c.calltime,c.updatetime) )) / 3600) as hours_spent, c.id as cid
                                             FROM callouts_response a
                                             LEFT JOIN user_accounts b ON a.useracctid = b.id
                                             LEFT JOIN callouts c ON a.calloutid = c.id
                                             WHERE c.status IN (3,10) AND c.calltime BETWEEN :start AND :end
                                             AND a.status <> 4
                                             AND calltype NOT IN ('TRAINING','TESTONLY')
                                             GROUP BY c.id, month, datalabel ORDER BY month, datalabel, c.id) ORDER BY month, (datalabel=':max_monthly_label') DESC,datalabel, cid"
                                                                                                                                                       
config_manager_get_firehall = "SELECT * FROM config WHERE firehall_id = :fhid"                                                                                                                                                    

report_years_with_data = "SELECT YEAR(calltime) AS year FROM callouts WHERE YEAR(calltime) > 0 GROUP BY year ORDER BY year"


select_db_timezone = "SELECT IF(@@session.time_zone = 'SYSTEM', @@system_time_zone, @@session.time_zone);"

schema_version_get = "SELECT keyvalue from config WHERE firehall_id = -1 AND keyname = 'DB_SCHEMA_VERSION' AND keyindex = 0;"

schema_upgrade_1_1 = "CREATE TABLE IF NOT EXISTS `config` (
                      `id` int(11) NOT NULL AUTO_INCREMENT PRIMARY KEY,
                      `firehall_id` varchar(80) COLLATE utf8_unicode_ci NOT NULL,
                      `keyname` varchar(255) COLLATE utf8_unicode_ci NOT NULL,
                      `keyindex` int(11) NOT NULL DEFAULT 0,
                      `keyvalue` varchar(255) COLLATE utf8_unicode_ci NOT NULL,
                      `updatetime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP
                    ) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;"
                    
schema_upgrade_1_2 = "INSERT IGNORE INTO config 
                      SET firehall_id = -1, keyname = 'DB_SCHEMA_VERSION', keyindex = 0, keyvalue= '1.2';"
                          
schema_upgrade_1_3 = "UPDATE user_accounts SET access = access | (0x4 | 0x8);"
                          
schema_upgrade_1_4 = "UPDATE config 
                      SET keyvalue= '1.4' WHERE firehall_id = -1 AND keyname = 'DB_SCHEMA_VERSION' AND keyindex = 0;"

schema_upgrade_1_5 = "CREATE TABLE IF NOT EXISTS `user_types` (
                      `id` int(11) NOT NULL AUTO_INCREMENT PRIMARY KEY,
                      `firehall_id` varchar(80) COLLATE utf8_unicode_ci NOT NULL,
                      `name` varchar(255) COLLATE utf8_unicode_ci NOT NULL,
                      `default_access` int(11) NOT NULL DEFAULT 0,
                      `updatetime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP
                    ) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;"
                    
schema_upgrade_1_6 = "INSERT IGNORE INTO user_types 
                                    SET firehall_id = -1, name = 'admin', default_access = 1;"
              
schema_upgrade_1_7 = "INSERT IGNORE INTO user_types 
                                    SET firehall_id = -1, name = 'fire fighter', default_access = 12;"
              
schema_upgrade_1_8 = "INSERT IGNORE INTO user_types 
                                    SET firehall_id = -1, name = 'fire apparatus', default_access = 12;"
              
schema_upgrade_1_9 = "INSERT IGNORE INTO user_types 
                                    SET firehall_id = -1, name = 'office staff', default_access = 2;"

schema_upgrade_2_0 = "ALTER TABLE user_accounts ADD COLUMN user_type int(11) AFTER access;"

schema_upgrade_2_1 = "UPDATE user_accounts SET user_type = 4;"

schema_upgrade_2_2 = "UPDATE user_accounts SET user_type = 2 WHERE access & 12;"

schema_upgrade_2_3 = "UPDATE user_accounts SET user_type = 1 WHERE access & 0x1;"

schema_upgrade_2_4 = "UPDATE config 
                      SET keyvalue= '2.4' WHERE firehall_id = -1 AND keyname = 'DB_SCHEMA_VERSION' AND keyindex = 0;"

